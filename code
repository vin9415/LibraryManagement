#include <iostream>
#include <string>
#include <limits> 

using namespace std;

struct Book {
    int id;
    string title;
    string author;
    Book* next;
};

Book* createBook(int id, string title, string author) {
    Book* newBook = new Book;
    newBook->id = id;
    newBook->title = title;
    newBook->author = author;
    newBook->next = NULL;
    return newBook;
}

void addBook(Book*& head, int id, string title, string author) {
    Book* newBook = createBook(id, title, author);
    if (head == NULL) {
        head = newBook;
    } else {
        Book* temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = newBook;
    }
    cout << "Book added successfully!\n";
}

void displayBooks(Book* head) {
    if (head == NULL) {
        cout << "No books in the library.\n";
        return;
    }
    Book* temp = head;
    while (temp != NULL) {
        cout << "Book ID: " << temp->id << "\n";
        cout << "Title: " << temp->title << "\n";
        cout << "Author: " << temp->author << "\n\n";
        temp = temp->next;
    }
}

void searchBook(Book* head, int id) {
    Book* temp = head;
    while (temp != NULL) {
        if (temp->id == id) {
            cout << "Book found!\n";
            cout << "Book ID: " << temp->id << "\n";
            cout << "Title: " << temp->title << "\n";
            cout << "Author: " << temp->author << "\n";
            return;
        }
        temp = temp->next;
    }
    cout << "Book not found.\n";
}

void deleteBook(Book*& head, int id) {
    if (head == NULL) {
        cout << "No books in the library to delete.\n";
        return;
    }
    if (head->id == id) {
        Book* toDelete = head;
        head = head->next;
        delete toDelete;
        cout << "Book deleted successfully.\n";
        return;
    }
    Book* temp = head;
    while (temp->next != NULL && temp->next->id != id) {
        temp = temp->next;
    }
    if (temp->next == NULL) {
        cout << "Book not found.\n";
    } else {
        Book* toDelete = temp->next;
        temp->next = temp->next->next;
        delete toDelete;
        cout << "Book deleted successfully.\n";
    }
}

int main() {
    Book* library = NULL;
    int choice, id;
    string title, author;

    do {
        cout << "\nLibrary Management System\n";
        cout << "1. Add Book\n";
        cout << "2. Display Books\n";
        cout << "3. Search Book\n";
        cout << "4. Delete Book\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter Book ID: ";
                cin >> id;
                cin.ignore(numeric_limits<streamsize>::max(), '\n'); 
                cout << "Enter Book Title: ";
                getline(cin, title);
                cout << "Enter Book Author: ";
                getline(cin, author);
                addBook(library, id, title, author);
                break;
            case 2:
                displayBooks(library);
                break;
            case 3:
                cout << "Enter Book ID to search: ";
                cin >> id;
                searchBook(library, id);
                break;
            case 4:
                cout << "Enter Book ID to delete: ";
                cin >> id;
                deleteBook(library, id);
                break;
            case 5:
                cout << "Exiting...\n";
                break;
            default:
                cout << "Invalid choice! Try again.\n";
        }
    } while (choice != 5);

    return 0;
}
